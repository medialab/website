image: docker:stable

stages:
  - build
  - deploy

variables:
  WEB_IMAGE_NAME: $CI_REGISTRY_IMAGE/website_web:$CI_COMMIT_REF_SLUG
  API_IMAGE_NAME: $CI_REGISTRY_IMAGE/website_api:$CI_COMMIT_REF_SLUG
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_HOST: tcp://127.0.0.1:2375
  DOCKER_TLS_CERTDIR: ""

services:
    - docker:stable-dind

build_web_image:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --force-rm --build-arg "API_URL=$CI_ENVIRONMENT_URL/api" -t $WEB_IMAGE_NAME -f ./admin/Dockerfile .
    - docker push $WEB_IMAGE_NAME
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: $BASEURL
  only:
    - master
    - staging
    - prod

build_api_image:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --force-rm -t $API_IMAGE_NAME -f Dockerfile .
    - docker push $API_IMAGE_NAME
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: $BASEURL
  only:
    - master
    - staging
    - prod

deploy:
  image:
    name: jrisp/kubehelper:latest
    entrypoint: [""]
  stage: deploy
  dependencies:
    - build_web_image
    - build_api_image
  script:
    - NS=website
    - kubectl config set-cluster k8s --server="$KUBE_URL" --certificate-authority="$KUBE_CA_PEM_FILE"
    - kubectl config set-credentials gitlab-admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=gitlab-admin
    - kubectl config use-context default
    - kubectl apply -f k8s/namespace.yml
    - cp ${API_SECRETS} k8s/overlays/$CI_COMMIT_REF_SLUG/api.env
    - kubectl apply -k k8s/overlays/$CI_COMMIT_REF_SLUG
    - kubectl -n ${NS} rollout restart deployment ${NS}-api
    - kubectl -n ${NS} rollout restart deployment ${NS}-web
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
   - staging
   - prod
